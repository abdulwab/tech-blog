// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique // Clerk user ID
  email     String   @unique
  firstName String?
  lastName  String?
  imageUrl  String?
  role      UserRole @default(VIEWER)
  isActive  Boolean  @default(true)
  lastSignIn DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  posts     Post[]

  @@map("users")
}

enum UserRole {
  ADMIN    // Full access to everything
  WRITER   // Can create/edit posts, limited admin access
  VIEWER   // Can only view content, no admin access
}

model Post {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  description String
  content     String   // Markdown content
  coverImage  String
  isFeatured  Boolean  @default(false)
  isPublished Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  author      String
  category    String
  tags        String[] @default([])
  
  // Relations
  authorId    String?  // User who created the post
  authorUser  User?    @relation(fields: [authorId], references: [id])

  @@map("posts")
}

model Subscriber {
  id           String   @id @default(cuid())
  email        String   @unique
  subscribedAt DateTime @default(now())
  isActive     Boolean  @default(true)

  @@map("subscribers")
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  slug        String   @unique
  description String?
  color       String   @default("#60a5fa") // Default to web color
  icon        String?  // Icon name or emoji
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("categories")
}

model EmailNotification {
  id          String   @id @default(cuid())
  subject     String
  content     String
  recipientType String // 'all', 'active', 'specific'
  recipientList String[] @default([]) // Specific emails if recipientType is 'specific'
  sentAt      DateTime?
  sentCount   Int      @default(0)
  failedCount Int      @default(0)
  status      String   @default("draft") // 'draft', 'scheduled', 'sent', 'failed'
  scheduledAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String   // Admin user ID

  @@map("email_notifications")
}

model AdminSettings {
  id                    String   @id @default(cuid())
  emailNotifications    Boolean  @default(true)
  autoNotifyNewPost     Boolean  @default(true)
  autoNotifyNewSubscriber Boolean @default(true)
  notificationFromEmail String   @default("noreply@techblog.com")
  notificationFromName  String   @default("Abdul Wahab")
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@map("admin_settings")
}

model ActivityLog {
  id        String   @id @default(cuid())
  type      String   // 'post_created', 'post_published', 'post_updated', 'subscriber_added', 'notification_sent', 'category_created', etc.
  title     String   // Human-readable title
  details   String?  // Optional details about the activity
  metadata  Json?    // Additional metadata (post id, subscriber email, etc.)
  createdBy String?  // Admin user ID who performed the action
  createdAt DateTime @default(now())

  @@map("activity_logs")
} 